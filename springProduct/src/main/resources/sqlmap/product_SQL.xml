<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace : xml파일은 여러개일 수 있으므로 
	이를 구별하기 위한 식별 용도로 사용 -->
<mapper namespace="product">

	<insert id="insert" parameterType="kr.or.ddit.vo.ProductVO">
		<!-- order로 selectKey의 실행 타이밍 선택 propery로 반환값을 담을 수 있음-->
			INSERT
			    INTO product (
			        product_id,
			        pname,
			        unit_price,
			        description,
			        manufacturer,
			        category,
			        units_in_stock,
			        condition,
			        filename
<!-- 			        quantity -->
			    )
				VALUES (
			        #{productId}
			       , #{pname}
			       , #{unitPrice}
			       , #{description}
			       , #{manufacturer}
			       , #{category}
			       , #{unitsInStock}
			       , #{condition}
			       , #{fileName})
<!-- 			       , #{quantity}) -->
	</insert>
	
	<!-- 상품목록 -->
	<select id="list" resultType="productVO">
		SELECT PRODUCT_ID, PNAME, UNIT_PRICE, DESCRIPTION, MANUFACTURER, CATEGORY, UNITS_IN_STOCK, CONDITION, FILENAME
		FROM PRODUCT
		ORDER BY PRODUCT_ID DESC
	</select>
	
	<!-- 상품 상세 -->
	<select id="select_detail" parameterType="productVO" resultType="productVO">
		SELECT PRODUCT_ID, PNAME, UNIT_PRICE, DESCRIPTION, MANUFACTURER, CATEGORY, UNITS_IN_STOCK, CONDITION, FILENAME
		FROM PRODUCT
		WHERE PRODUCT_ID = #{productId}
	</select>
	
	<update id="update" parameterType="productVO">
		UPDATE PRODUCT
		SET PNAME=#{pname}, UNIT_PRICE=#{unitPrice}, DESCRIPTION=#{description}, MANUFACTURER=#{manufacturer}, CATEGORY=#{category}, UNITS_IN_STOCK=#{unitsInStock}, CONDITION=#{condition}, FILENAME=#{fileName}
		WHERE PRODUCT_ID = #{productId}
	</update>
	
	<delete id="delete" parameterType="String">
		DELETE FROM PRODUCT
		WHERE PRODUCT_ID = #{productId}
	</delete>
	
</mapper>

